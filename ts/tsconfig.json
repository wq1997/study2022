{
  /*
    include: 用来指示哪些文件下的ts文件需要被编译，**表示任意目录，*表示任意文件
    exclude: 用来指示哪些文件下的ts文件不需要被编译,一般情况下不需要设置
             默认值：["node_modules", "bower_components", "jspm_packages"]
    extends: 定义被继承的配置文件
             一般情况下，如果配置过多，需要协助其他文件来配置，只需要在属性值中写入文件路径即可
    files: 指定需要被编译的文件名称
    compilerOptions: 用来完成编译时的配置
        target: 指定ts被编译的ES版本，其中exnext表示是ES的最新版本，比如es6
        module: 指定要使用的模块化规范，比如commonjs
        lib: 指定项目中要使用的库,一般情况下不需要修改，如果不是放在浏览器端执行，想要使用document，可能就需要加上dom就可以使用document
        outDir: 用来指定编译后文件所在的目录
        outFile: 全局代码会全部合并到一个文件中，前提是module是amd或者system才会支持
        allowJs: 是否对js文件进行编译，编译到outDir中
        checkJs: 检测js代码是否符合ts的语法规范
        removeComments: 编译之后移除注释
        noEmit: 编译之后不显示文件，true为不显示，false为显示
        noEmitOnError: 有错误时不生成编译文件
        alwaysStrict: 编译之后的js文件开启严格模式
        noImplicitAny: 在ts中不设置类型就会默认any类型,设置为true就不允许隐式any类型
        noImplicitThis: 设置为true就不允许使用不明确的this，需要手动添加this类型比如window
        strictNullChecks: 严格检查null
        strict: 所有严格检查的总开关,
        experimentalDecorators: 使用装饰器
  */
  "include": [
    "./src/**/*"
  ],
  "exclude": [
    "./src/js/**/*"
  ],
  "extends": "./tsconfig.paths.json",
  "files": [
    "./02-被编译.ts"
  ],
  "compilerOptions": {
    "strict": true,
    "target": "es2015",
    "module": "es2015",
    "lib": ["dom", "esnext"],
    "outDir": "./dist",
    "allowJs": true,
    "checkJs": true,
    "removeComments": true,
    "noEmit": false,
    "noEmitOnError": true,
    "alwaysStrict": true,
    "noImplicitAny": true,
    "noImplicitThis": true,
    "strictNullChecks": true,
    "experimentalDecorators": true
  }
}